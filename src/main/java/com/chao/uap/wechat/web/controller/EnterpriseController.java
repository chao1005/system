/*******************************************************************************
* Copyright (c) 2017 by Hyetec  Corporation all right reserved.
* 2017年11月20日 11:09
* 
*******************************************************************************/
package com.hyetec.uap.wechat.web.controller;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.hyetec.uap.core.web.controller.BaseController;
import com.hyetec.uap.wechat.model.Advice;
import com.hyetec.uap.wechat.model.Dictionary;
import com.hyetec.uap.wechat.model.Enterprise;
import com.hyetec.uap.wechat.model.Expert;
import com.hyetec.uap.wechat.service.AdviceService;
import com.hyetec.uap.wechat.service.DictionaryService;
import com.hyetec.uap.wechat.service.EnterpriseService;
import com.hyetec.uap.wechat.service.ExpertService;
import com.hyetec.uap.wechat.vo.EnterpriseVo;


import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping("/enterprise")
public class EnterpriseController extends BaseController<Enterprise, EnterpriseVo> {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table f_enterprise
     *
     * @hyetec
     */
    private EnterpriseService enterpriseService;
    @Autowired
    private DictionaryService dictionaryService;
    @Autowired
    private AdviceService adviceService;
    @Autowired
    private ExpertService expertService;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table f_enterprise
     *
     * @hyetec
     */
    public EnterpriseService getEnterpriseService() {
        return( EnterpriseService)baseService;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table f_enterprise
     *
     * @hyetec
     */
    @Autowired
    public void setEnterpriseService(EnterpriseService enterpriseService) {
        super.setBaseService(enterpriseService )  ;
        this.enterpriseService= (EnterpriseService )baseService;
    }
    
    @RequestMapping("/list")
   	public String list(EnterpriseVo enterpriseVo, HttpServletRequest req, HttpServletResponse res,
   			Model model) {
       	List<Dictionary> enterprisePermission = dictionaryService.selectByType("enterprisePermission");
       	model.addAttribute("enterprisePermission",JSONArray.toJSON(enterprisePermission));
   		model.addAttribute("enterpriseVo", enterpriseVo);

   		return "/enterprise/list";
       }
       

    @RequestMapping("/toAdd")
   	public String add(Model model,Enterprise enterprise) {
       	
    	List<Dictionary> enterprisePermission = dictionaryService.selectByType("enterprisePermission");
    	List<Dictionary> enterpriseLevel = dictionaryService.selectByType("enterpriseLevel");
    	List<Dictionary> userStatus = dictionaryService.selectByType("userStatus");
    	model.addAttribute("userStatus",userStatus);
       	model.addAttribute("enterprisePermission",enterprisePermission);
       	model.addAttribute("enterpriseLevel",enterpriseLevel);
       	model.addAttribute("enterprise", enterprise);
       	model.addAttribute("adviceCount", 0);
   		return "/enterprise/form";
       }
       
    
    @RequestMapping("/toList/{id}/{page}")
   	public String toList(@PathVariable Long id , @PathVariable Long page ,Model model,Enterprise enterprise) {

       	List<Dictionary> expertType = dictionaryService.selectByType("expertType");
       	List<Expert> experts = expertService.selectByEnterprise(id);
    	model.addAttribute("userId",id);
    	model.addAttribute("page",page);
    	model.addAttribute("experts",experts);
       	model.addAttribute("expertType",expertType);
       	model.addAttribute("enterprise",enterprise);
   		return "/enterprise/tolist";
       }

    @RequestMapping("/toEdit/{id}")
   	public String edit(@PathVariable Long id , Model model) {

       	Enterprise enterprise = enterpriseService.selectByPrimaryKey(id);
       	List<Dictionary> enterprisePermission = dictionaryService.selectByType("enterprisePermission");
    	List<Dictionary> enterpriseLevel = dictionaryService.selectByType("enterpriseLevel");
    	List<Dictionary> userStatus = dictionaryService.selectByType("userStatus");
    	List<Advice> advices = adviceService.selectByEnterpriseId(enterprise.getPkId());
    	model.addAttribute("userStatus",userStatus);
       	model.addAttribute("enterprisePermission",enterprisePermission);
       	model.addAttribute("enterpriseLevel",enterpriseLevel);
       	model.addAttribute("enterprise", enterprise);
       	model.addAttribute("advices", advices);
       	model.addAttribute("adviceCount", advices.size());
   		return "/enterprise/form";
       }
       
       
    @RequestMapping(value="/selectAll")
    public String selectAllList(Model model){
    	
    	List<Enterprise> enterprises = enterpriseService.selectAllEnterprise();
    	model.addAttribute("enterprises", enterprises);
    	
    	return "/roadshow/enterpriseList";
    }
    
    @RequestMapping(value="/selectAll/{name}")
    public String selectAllList(Model model,@PathVariable String name){
    	List<Enterprise> enterprises = enterpriseService.selectAllEnterpriseByname(name);
    	model.addAttribute("enterprises", enterprises);
    	model.addAttribute("name", name);
    	
    	return "/roadshow/enterpriseList";
    }
    
   @ResponseBody
   @RequestMapping(value="/list.json")
   public EnterpriseVo list(EnterpriseVo enterpriseVo){
   	enterpriseService.selectAll(enterpriseVo);
   	return enterpriseVo;
   }
   
   @ResponseBody
   @RequestMapping(value="/del/{id}")
   public boolean del(@PathVariable Long id){
   	boolean tag = true;
   	try {
		enterpriseService.delByPkId(id);
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
		tag = false;
	}
   	return tag;
   }
   
   
   
   @ResponseBody
   @RequestMapping(value="/toAdd.json")
   public Boolean toAdd(String enterprise,String adviceList){
   	boolean tag = true;
   	try {
   		Enterprise enterprises = JSON.parseObject(enterprise, Enterprise.class);
   		List<Advice> advices = JSONArray.parseArray(adviceList, Advice.class);
		enterpriseService.insertEnterprise(enterprises, advices);
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
   	return tag;
   }
   
   @ResponseBody
   @RequestMapping(value="/toEdit.json")
   public Boolean toEdit(String enterprise,String adviceList){
   	boolean tag = true;
   	try {
   		Enterprise enterprises = JSON.parseObject(enterprise, Enterprise.class);
   		List<Advice> advices = JSONArray.parseArray(adviceList, Advice.class);
   		enterpriseService.updateEnterprise(enterprises,advices);
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
   	return  tag;
   }
}