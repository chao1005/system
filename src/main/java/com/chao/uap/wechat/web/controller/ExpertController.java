/*******************************************************************************
* Copyright (c) 2017 by Hyetec  Corporation all right reserved.
* 2017年11月20日 11:09
* 
*******************************************************************************/
package com.hyetec.uap.wechat.web.controller;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.hyetec.uap.core.web.controller.BaseController;
import com.hyetec.uap.wechat.model.Dictionary;
import com.hyetec.uap.wechat.model.Expert;
import com.hyetec.uap.wechat.model.User;
import com.hyetec.uap.wechat.service.DictionaryService;
import com.hyetec.uap.wechat.service.ExpertService;
import com.hyetec.uap.wechat.service.UserService;
import com.hyetec.uap.wechat.util.UserUtils;
import com.hyetec.uap.wechat.vo.ExpertVo;

import net.sf.json.JSONArray;

@Controller
@RequestMapping("/expert")
public class ExpertController extends BaseController<Expert, ExpertVo> {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table
	 * f_expert
	 *
	 * @hyetec
	 */
	private ExpertService expertService;
	@Autowired
	private DictionaryService dictionaryService;
	@Autowired
	private UserService userService;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table
	 * f_expert
	 *
	 * @hyetec
	 */
	public ExpertService getExpertService() {
		return (ExpertService) baseService;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table
	 * f_expert
	 *
	 * @hyetec
	 */
	@Autowired
	public void setExpertService(ExpertService expertService) {
		super.setBaseService(expertService);
		this.expertService = (ExpertService) baseService;
	}

	@RequestMapping("/list")
	public String list(ExpertVo expertVo, HttpServletRequest req, HttpServletResponse res,
			Model model) {
		List<Dictionary> expertType = dictionaryService.selectByType("expertType");
		model.addAttribute("expertType", JSONArray.fromObject(expertType));
		model.addAttribute("expertVo", expertVo);

		return "/expert/list";
	}

	@RequestMapping("/toAdd")
	public String add(Model model, Expert expert) {

		List<Dictionary> expertType = dictionaryService.selectByType("expertType");
		List<Dictionary> expertLevel = dictionaryService.selectByType("expertLevel");
		List<Dictionary> userStatus = dictionaryService.selectByType("userStatus");
		model.addAttribute("userStatus", userStatus);
		model.addAttribute("expertLevel", expertLevel);
		model.addAttribute("expertType", expertType);
		model.addAttribute("expert", expert);
		return "/expert/form";
	}

	public String edit(@PathVariable Long id, Model model) {
		Expert expert = expertService.selectByPrimaryKey(id);
		List<Dictionary> expertType = dictionaryService.selectByType("expertType");
		List<Dictionary> expertLevel = dictionaryService.selectByType("expertLevel");
		List<Dictionary> userStatus = dictionaryService.selectByType("userStatus");
		String name = userService.selectByPrimaryKey(expert.getUserId()).getUserName();
		model.addAttribute("userStatus", userStatus);
		model.addAttribute("expertLevel", expertLevel);
		model.addAttribute("expertType", expertType);
		model.addAttribute("expert", expert);
		model.addAttribute("name", name);
		return "/expert/form";
	}

	@ResponseBody
	@RequestMapping(value = "/list.json")
	public ExpertVo list(ExpertVo expertVo) {
		expertService.selectAll(expertVo);
		return expertVo;
	}
	
	@RequestMapping("/listTj")
	public String listTj1(ExpertVo expertVo, HttpServletRequest req, HttpServletResponse res,
			Model model) {
		List<Dictionary> expertType = dictionaryService.selectByType("expertType");
		model.addAttribute("expertType", JSONArray.fromObject(expertType));
		model.addAttribute("expertVo", expertVo);

		return "/expert/listeva";
	}
	
	@ResponseBody
	@RequestMapping(value = "/listTj.json")
	public ExpertVo listTj(ExpertVo expertVo) {
		expertService.selectAll(expertVo);
		return expertVo;
	}
	
	
	@ResponseBody
	@RequestMapping(value = "/del/{id}")
	public boolean del(@PathVariable Long id) {
		boolean tag = true;
		try {
			expertService.delByPkId(id);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			tag = false;
		}
		return tag;
	}

	@ResponseBody
	@RequestMapping(value = "/toAdd.json")
	public Boolean toAdd(String expert) {
		boolean tag = true;
		try {
			User user = UserUtils.getUser();
			Expert experts = JSON.parseObject(expert, Expert.class);
			experts.setCreateTime(new Date());
			experts.setStatus(0);
			experts.setUserId(user.getPkId());
			expertService.insertSelective(experts);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return tag;
	}

	@ResponseBody
	@RequestMapping(value = "/toEdit.json")
	public Boolean toEdit(String expert) {
		boolean tag = true;
		try {
			Expert experts = JSON.parseObject(expert, Expert.class);
			expertService.updateByPrimaryKeySelective(experts);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return tag;
	}

	/**
	 * 专家信息 /expert/info
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/info")
	public String info(HttpServletRequest request) {
		return "/front/per_info/expert";
	}

	/**
	 * 专家预约 /expert/appoint
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/appoint")
	public String appoint(HttpServletRequest request) {
		return "/front/appointment/expert";
	}

	/**
	 * 专家排班 /expert/schedual
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/schedual")
	public String schedual(HttpServletRequest request) {
		return "/front/schedual/expert";
	}

	/**
	 * 专家咨询 专家列表 /wechat-platform/src/main/webapp/WEB-INF/jsp/front/expert_consult/list.jsp
	 */
	@RequestMapping("/consultList")
	public String consultList(HttpServletRequest request) {
		return "/front/expert_consult/list";
	}

	/* 专家咨询  专家列表
	* "src/main/webapp/WEB-INF/jsp/front/expert_consult/info.jsp"
	*/
	@RequestMapping("/consult/experInfo")
	public String experInfo(HttpServletRequest request) {
		return "/front/expert_consult/info";
	}

	/* 专家咨询  客服列表
	 * "src/main/webapp/WEB-INF/jsp/front/expert_consult/info.jsp"
	 */
	@RequestMapping("/consult/custom_service_list")
	public String custom_service_list(HttpServletRequest request) {

		// 创建一个聊天室

		return "/front/expert_consult/custom_service_list";
	}
}